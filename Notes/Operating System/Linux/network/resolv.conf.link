# Linux resolv.conf

参考：

https://wiki.archlinux.org/index.php/Domain_name_resolution_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)

http://www.ttlsa.com/linux/resolv-conf-desc/

http://dns-learning.twnic.net.tw/bind/intro4.html

==该文件是Linux上修改DNS的接口文件，可以通过链接指向不同管理器的配置文件，例如Ubuntu18.04就是通过systemd管理==

`/etc/resolv.conf`文件用于管理和解析domain，修改文件后无需重启network，修改后立即生效

如果网络是DHCP方式获取DNS且设置了`PEERDNS=yes`(dhcp的方式默认为yes)，会覆盖`/etc/resovl.conf`文件，需要将其置为`PEERDNS=no`

## 查看使用的dns服务器

使用`dig localhost`或`nslookup localhost`查看使用的DNS服务器

```
root in ~ λ cat /etc/resolv.conf
# Dynamic resolv.conf(5) file for glibc resolver(3) generated by resolvconf(8)
#     DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN
# 127.0.0.53 is the systemd-resolved stub resolver.
# run "systemd-resolve --status" to see details about the actual nameservers.

nameserver 127.0.0.53
options timeout:2 attempts:3 rotate single-request-reopen

root in ~ λ dig localhost

; <<>> DiG 9.11.3-1ubuntu1.13-Ubuntu <<>> localhost
;; global options: +cmd
;; Got answer:
;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 54040
;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 65494
;; QUESTION SECTION:
;localhost.                     IN      A

;; ANSWER SECTION:
localhost.              0       IN      A       127.0.0.1

;; Query time: 0 msec
;; SERVER: 127.0.0.53#53(127.0.0.53) #使用的DNS服务器
;; WHEN: Mon Mar 01 11:26:32 HKT 2021
;; MSG SIZE  rcvd: 54

-----


root in ~ λ nslookup localhost
Server:         127.0.0.53
Address:        127.0.0.53#53

Non-authoritative answer:
Name:   localhost
Address: 127.0.0.1
Name:   localhost
Address: ::1

```

## 配置

- nameserver

  指定DNS服务器，当有多个nameserver时，按照顺序解析。如果没有设置该值，使用本机的nameserver。但是一般不超过3个，因为如果DNS服务器无响应需要等待时间

  ```
  [root@chz ~]# cat /etc/resolv.conf
  # Generated by NetworkManager
  nameserver 114.114.114.114
  nameserver 8.8.8.8
  ```

- domain

  指定本机的域名，仅做为search的默认值使用

- search

  在没有设置search时，search默认为domain的值，当域名不能被nameserver解析时，resolver就会在该域名后添加search参数

  可以通过空格指定多个

  ```
  [root@chz ~]# cat /etc/resolv.conf
  # Generated by NetworkManager
  search baidu.com
  nameserver 114.114.114.114
  [root@chz ~]# ping news
  PING news.n.shifen.com (180.101.49.131) 56(84) bytes of data.
  64 bytes from 180.101.49.131 (180.101.49.131): icmp_seq=1 ttl=128 time=11.3 ms
  64 bytes from 180.101.49.131 (180.101.49.131): icmp_seq=2 ttl=128 time=11.5 ms
  64 bytes from 180.101.49.131 (180.101.49.131): icmp_seq=3 ttl=128 time=11.5 ms
  
  #实际是news.baidu.com
  [root@chz ~]# dig news.baidu.com
  
  ; <<>> DiG 9.11.4-P2-RedHat-9.11.4-9.P2.el7 <<>> news.baidu.com
  ;; global options: +cmd
  ;; Got answer:
  ;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 9193
  ;; flags: qr rd ra; QUERY: 1, ANSWER: 3, AUTHORITY: 0, ADDITIONAL: 1
  
  ;; OPT PSEUDOSECTION:
  ; EDNS: version: 0, flags:; udp: 512
  ;; QUESTION SECTION:
  ;news.baidu.com.			IN	A
  
  ;; ANSWER SECTION:
  news.baidu.com.		460	IN	CNAME	news.n.shifen.com.
  news.n.shifen.com.	147	IN	A	180.101.49.131
  news.n.shifen.com.	147	IN	A	180.97.33.136
  
  ```
  
- options

  修改resolver的内置变量

  1. timeout:n

     设置等待DNS响应的时间

  2. attemps:n

     设置发送错误信息之前的重试次数

  3. rotate 

     使用roud-robin的方式访问DNS

  4. single-request-reopen

     resolver对A和AAAA记录使用同一个socket文件发送请求，但是有些硬件会错误，使用该参数会为请求重新打开一个端口
     
     ```
     options timeout:2 attempts:3 rotate single-request-reopen
     ```

## 辨别是NetworkMangar还是Systemd-resolved生成的配置文件

如果是NetworkManager生成的

```
root in ~ λ cat /etc/resolv.conf
  File: /etc/resolv.conf
  # Generated by NetworkManager
  nameserver 8.8.8.8
```

如果是Systemd-resovled生成的

```
root in /etc/systemd λ cat /etc/resolv.conf
# Dynamic resolv.conf(5) file for glibc resolver(3) generated by resolvconf(8)
#     DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN
# 127.0.0.53 is the systemd-resolved stub resolver.
# run "systemd-resolve --status" to see details about the actual nameservers.

nameserver 127.0.0.53
```

